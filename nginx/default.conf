server{
    #penser à modifier server_name et plus bas le add_header pour avoir le bon nom de domaine
    listen 80;
    server_name localhost;

    location / {
        proxy_pass http://react:3000;

        proxy_http_version 1.1;


        proxy_set_header X-Real-IP $remote_addr; #récupère l'IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;#logs par Ip
        proxy_set_header X-Forwarded-Proto $scheme;#savoir si la requête était en http ou https (utile ?)


         # Support pour WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://backend-node:80/;

        proxy_http_version 1.1;

        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-CSRF-Token' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        proxy_set_header X-Real-IP $remote_addr; #récupère l'IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;#logs par Ip
        proxy_set_header X-CSRF-Token $http_x_csrf_token; # Transmettre le token CSRF

        proxy_set_header X-Forwarded-Proto $scheme;#savoir si la requête était en http ou https (utile ?)
    }

}

